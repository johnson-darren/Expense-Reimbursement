// <auto-generated />
using System;
using Expenses_WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Expenses_WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250408020152_SyncWithDatabase")]
    partial class SyncWithDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.Department", b =>
                {
                    b.Property<int>("Department_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Department_ID"));

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Department_ID");

                    b.ToTable("Departments", "public");
                });

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.Receipt", b =>
                {
                    b.Property<int>("Receipt_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Receipt_ID"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("Checked_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Checked_By")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date_Purchased")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Receipt_File_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Receipt_File_ID1")
                        .HasColumnType("integer");

                    b.Property<int>("Status_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Status_ID1")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Submitted_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("User_ID")
                        .HasColumnType("integer");

                    b.Property<int>("User_ID1")
                        .HasColumnType("integer");

                    b.HasKey("Receipt_ID");

                    b.HasIndex("Receipt_File_ID1");

                    b.HasIndex("Status_ID1");

                    b.HasIndex("User_ID1");

                    b.ToTable("Receipts", "public");
                });

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.Receipt_File", b =>
                {
                    b.Property<int>("Receipt_File_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Receipt_File_ID"));

                    b.Property<byte[]>("File_Data")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("File_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Uploaded_At")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Receipt_File_ID");

                    b.ToTable("Receipt_Files", "public");
                });

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.Role", b =>
                {
                    b.Property<int>("Role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Role_ID"));

                    b.Property<string>("Role_Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Role_ID");

                    b.ToTable("Roles", "public");
                });

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.Status", b =>
                {
                    b.Property<int>("Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Status_ID"));

                    b.Property<string>("Status_Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Status_ID");

                    b.ToTable("Statuses", "public");
                });

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("User_ID"));

                    b.Property<int>("Department_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Department_ID1")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Role_ID1")
                        .HasColumnType("integer");

                    b.HasKey("User_ID");

                    b.HasIndex("Department_ID1");

                    b.HasIndex("Role_ID1");

                    b.ToTable("Users", "public");
                });

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.Receipt", b =>
                {
                    b.HasOne("Expenses_WebApp.Data.DataModels.Receipt_File", "Receipt_File")
                        .WithMany()
                        .HasForeignKey("Receipt_File_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expenses_WebApp.Data.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Status_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expenses_WebApp.Data.DataModels.User", "User")
                        .WithMany()
                        .HasForeignKey("User_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt_File");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Expenses_WebApp.Data.DataModels.User", b =>
                {
                    b.HasOne("Expenses_WebApp.Data.DataModels.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expenses_WebApp.Data.DataModels.Role", "Role")
                        .WithMany()
                        .HasForeignKey("Role_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
